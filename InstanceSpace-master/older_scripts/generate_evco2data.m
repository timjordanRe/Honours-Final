rootdir = '../InstanceGeneration_BlackBoxOptimisation/';
datafile = [rootdir 'metadata.csv'];
Xbar = readtable(datafile);
varlabels = Xbar.Properties.VariableNames;
isname = strcmpi(varlabels,'instances');
isfeat = strncmpi(varlabels,'feature_',8);
isalgo = strncmpi(varlabels,'algo_',5);
issource = strcmpi(varlabels,'source');
model.data.instlabels = Xbar{:,isname};
if isnumeric(model.data.instlabels)
    model.data.instlabels = num2cell(model.data.instlabels);
    model.data.instlabels = cellfun(@(x) num2str(x),model.data.instlabels,'UniformOutput',false);
end
if any(issource)
    model.data.S = categorical(Xbar{:,issource});
end
model.data.featlabels = varlabels(isfeat);
model.data.algolabels = varlabels(isalgo);

model.data.X = Xbar{:,isfeat};
model.data.Y = Xbar{:,isalgo};
model.data.featlabels = strrep(model.data.featlabels,'feature_','');
model.data.algolabels = strrep(model.data.algolabels,'algo_','');
Yaux = model.data.Y;
[rankPerf,rankAlgo] = sort(Yaux,2,'ascend');
model.data.Ybest = rankPerf(:,1);
model.data.P = rankAlgo(:,1);
model.data.Ybin = double(~isinf(Yaux));
model.data.Ybin(isnan(Yaux)) = NaN;
model.data.numGoodAlgos = sum(model.data.Ybin,2);

model.pilot.A = [-0.284540475 0.209907328 -0.31958864  -0.463890898 -0.300949587 0.029790169 0.531014437 -0.429196374;
                  0.610380182 0.162667986 -0.029267638  0.267385554 -0.438894233 0.533654711 0.017718121 -0.22559721];

model.pilot.summary = cell(3, size(model.pilot.A,2)+1);
model.pilot.summary(1,2:end) = model.data.featlabels;
model.pilot.summary(2:end,1) = {'Z_{1}','Z_{2}'};
model.pilot.summary(2:end,2:end) = num2cell(round(model.pilot.A,4));
              
model.pilot.Z = model.data.X*model.pilot.A';

opts.cloister.pval = 0.05;
opts.cloister.cthres = 0.7;

model.cloist = CLOISTER(model.data.X, model.pilot.A, opts.cloister);

scriptfcn;
writeArray2CSV(model.pilot.Z, {'z_1','z_2'}, ...
               model.data.instlabels, ...
               [rootdir 'coordinates.csv']);
if isfield(model,'cloist')
    writeArray2CSV(model.cloist.Zedge, {'z_1','z_2'}, ...
                   makeBndLabels(model.cloist.Zedge), ...
                   [rootdir 'bounds.csv']);
    writeArray2CSV(model.cloist.Zecorr, {'z_1','z_2'}, ...
                   makeBndLabels(model.cloist.Zecorr), ...
                   [rootdir 'bounds_prunned.csv']);
end
writeArray2CSV(model.data.X, ...
               model.data.featlabels, ...
               model.data.instlabels, ...
               [rootdir 'feature_process.csv']);
writeArray2CSV(model.data.Y, ...
               model.data.algolabels, ...
               model.data.instlabels, ...
               [rootdir 'algorithm_process.csv']);
writeArray2CSV(model.data.Ybin, ...
               model.data.algolabels, ...
               model.data.instlabels, ...
               [rootdir 'algorithm_bin.csv']);
writeArray2CSV(model.data.numGoodAlgos, {'NumGoodAlgos'}, ...
               model.data.instlabels, ...
               [rootdir 'good_algos.csv']);
writeArray2CSV(model.data.P, {'Best_Algorithm'}, ...
               model.data.instlabels, ...
               [rootdir 'portfolio.csv']);
writeCell2CSV(model.pilot.summary(2:end,2:end), ...
              model.pilot.summary(1,2:end),...
              model.pilot.summary(2:end,1), ...
              [rootdir 'projection_matrix.csv']);

writetable(array2table(uint8(255.*parula(256)), ...
           'VariableNames', {'R','G','B'}), ...
           [rootdir 'color_table.csv']);
writeArray2CSV(colorscale(model.data.X), ...
               model.data.featlabels, ...
               model.data.instlabels, ...
               [rootdir 'feature_process_color.csv']);
writeArray2CSV(colorscale(model.data.Y), ...
               model.data.algolabels, ...
               model.data.instlabels, ...
               [rootdir 'algorithm_process_single_color.csv']);
writeArray2CSV(colorscaleg(model.data.Y), ...
               model.data.algolabels, ...
               model.data.instlabels, ...
               [rootdir 'algorithm_process_color.csv']);
writeArray2CSV(colorscaleg(model.data.numGoodAlgos),  ...
               {'NumGoodAlgos'}, ...
               model.data.instlabels, ...
               [rootdir 'good_algos_color.csv']);
